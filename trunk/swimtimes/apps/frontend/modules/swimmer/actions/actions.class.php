<?php
// auto-generated by sfPropelCrud
// date: 2006/11/29 13:15:22
?>
<?php

/**
 * swimmer actions.
 *
 * @package    sf_sandbox
 * @subpackage swimmer
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 2288 2006-10-02 15:22:13Z fabien $
 */
class swimmerActions extends sfActions
{
  public function executeIndex ()
  {
    return $this->forward('swimmer', 'list');
  }

  public function executeList ()
  {
    $this->swimmers = SwimmerPeer::doSelect(new Criteria());
  }

  public function executeShow ()
  {
    $this->swimmer = SwimmerPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->swimmer);
  }

  public function executeCreate ()
  {
    $this->swimmer = new Swimmer();

    $this->setTemplate('edit');
  }

  public function executeEdit ()
  {
    $this->swimmer = SwimmerPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->swimmer);
  }

  public function executeUpdate ()
  {
    if (!$this->getRequestParameter('id', 0))
    {
      $swimmer = new Swimmer();
    }
    else
    {
      $swimmer = SwimmerPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($swimmer);
    }

    $swimmer->setId($this->getRequestParameter('id'));
    $swimmer->setName($this->getRequestParameter('name'));
    $swimmer->setYear($this->getRequestParameter('year'));
    $swimmer->setTeamId($this->getRequestParameter('team_id'));

    $swimmer->save();

    return $this->redirect('swimmer/show?id='.$swimmer->getId());
  }

  public function executeDelete ()
  {
    $swimmer = SwimmerPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($swimmer);

    $swimmer->delete();

    return $this->redirect('swimmer/list');
  }
}
