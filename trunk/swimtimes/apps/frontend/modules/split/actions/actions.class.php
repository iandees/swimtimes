<?php
// auto-generated by sfPropelCrud
// date: 2006/12/01 20:07:07
?>
<?php

/**
 * split actions.
 *
 * @package    sf_sandbox
 * @subpackage split
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 2288 2006-10-02 15:22:13Z fabien $
 */
class splitActions extends sfActions
{
  public function executeIndex ()
  {
    return $this->forward('split', 'list');
  }

  public function executeList ()
  {
    $this->splits = SplitPeer::doSelect(new Criteria());
  }

  public function executeShow ()
  {
    $this->split = SplitPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->split);
  }

  public function executeCreate ()
  {
    $this->split = new Split();

    $this->setTemplate('edit');
  }

  public function executeEdit ()
  {
    $this->split = SplitPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->split);
  }

  public function executeUpdate ()
  {
    if (!$this->getRequestParameter('id', 0))
    {
      $split = new Split();
    }
    else
    {
      $split = SplitPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($split);
    }

    $split->setId($this->getRequestParameter('id'));
    $split->setTimeId($this->getRequestParameter('time_id'));
    $split->setNumber($this->getRequestParameter('number'));
    $split->setDuration($this->getRequestParameter('duration'));
    $split->setSwimmerId($this->getRequestParameter('swimmer_id'));

    $split->save();

    return $this->redirect('split/show?id='.$split->getId());
  }

  public function executeDelete ()
  {
    $split = SplitPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($split);

    $split->delete();

    return $this->redirect('split/list');
  }
}
