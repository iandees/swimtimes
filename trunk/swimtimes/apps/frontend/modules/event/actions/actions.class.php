<?php
// auto-generated by sfPropelCrud
// date: 2006/11/29 13:34:22
?>
<?php

/**
 * event actions.
 *
 * @package    sf_sandbox
 * @subpackage event
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 2288 2006-10-02 15:22:13Z fabien $
 */
class eventActions extends sfActions
{
  public function executeIndex ()
  {
    return $this->forward('event', 'list');
  }

  public function executeList ()
  {
    $this->events = EventPeer::doSelect(new Criteria());
  }

  public function executeShow ()
  {
    $this->event = EventPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->event);
  }

  public function executeCreate ()
  {
    $this->event = new Event();

    $this->setTemplate('edit');
  }

  public function executeEdit ()
  {
    $this->event = EventPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->event);
  }

  public function executeUpdate ()
  {
    if (!$this->getRequestParameter('id', 0))
    {
      $event = new Event();
    }
    else
    {
      $event = EventPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($event);
    }

    $event->setId($this->getRequestParameter('id'));
    $event->setName($this->getRequestParameter('name'));
    $event->setDistance($this->getRequestParameter('distance'));

    $event->save();

    return $this->redirect('event/show?id='.$event->getId());
  }

  public function executeDelete ()
  {
    $event = EventPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($event);

    $event->delete();

    return $this->redirect('event/list');
  }
}
